<TrID ver="2.00">
	<Info>
		<FileType>VVV Virtual Volume View database</FileType>
		<Ext>VVV</Ext>
		<Mime>application/octet-stream</Mime>
		<ExtraInfo>
			<Rem></Rem>
			<RefURL>http://vvvapp.sourceforge.net/</RefURL>
		</ExtraInfo>
		<User>LKO</User>
		<E-Mail></E-Mail>
		<Home></Home>
	</Info>
	<General>
		<FileNum>11</FileNum>
		<CheckStrings>True</CheckStrings>
		<Date>
			<Year>2018</Year>
			<Month>12</Month>
			<Day>1</Day>
		</Date>
		<Time>
			<Hour>14</Hour>
			<Min>2</Min>
			<Sec>58</Sec>
		</Time>
		<Creator>TrIDScan/Py v2.02</Creator>
	</General>
	<FrontBlock>
		<Pattern>
			<Bytes>01003930</Bytes>
			<ASCII> . . 9 0</ASCII>
			<Pos>0</Pos>
		</Pattern>
	</FrontBlock>
	<GlobalStrings>
		<String>IT IS NOT NULL IF THE ROW REPRESENTS A VIRTUAL PATH (FOLDER) AND IT CONTAINS THE PRIMARY KEY OF THE VIRTUAL_PATHS ROW THAT IT IS DESCRIBING.</String>
		<String>WHERE FILES.PATH_ID IS NULL AND VIRTUAL_FILES.VIRTUAL_PATH_FILE_ID</String>
		<String>* READS ALL THE PATHS FOR THE GIVEN VOLUME IN DESCENDING ORDER</String>
		<String>EXECUTE PROCEDURE SP_ADD_PHYSPATH_TO_VIRTUALPATH( PHYS_PATH_ID</String>
		<String>IF( EXISTS( SELECT PATH_ID FROM VIRTUAL_PATHS WHERE FATHER_ID</String>
		<String>7FK_VIRTUAL_FILES_VIRTUAL_PATHS FOREIGN KEYVIRTUAL_FILES</String>
		<String>7FK_VIRTUAL_FILES_VIRTUAL_PATHS2FOREIGN KEYVIRTUAL_FILES</String>
		<String>7FK_VIRTUAL_PATHS_VIRTUAL_PATHS FOREIGN KEYVIRTUAL_PATHS</String>
		<String>EXECUTE PROCEDURE SP_CREATE_VIRTUALPATH( VOLUME_NAME</String>
		<String>PATH OF THE VOLUME WHEN IT WAS CATALOGED OR UPDATED</String>
		<String>STORES THE FOLDERS STRUCTURE FOR THE VIRTUAL VIEW</String>
		<String>-- LOOKS FOR THE FATHER ID AND THE VOLUME NAME</String>
		<String>DECLARE VARIABLE VOLUME_NAME VARCHAR(500)</String>
		<String>DATE OF THE LAST UPDATE FOR THIS VOLUME</String>
		<String>%SQL$SP_ADD_VOLUME_TO_VIRTUALPATSYSDBA</String>
		<String>DATE IN WHICH THE VOLUME WAS CATALOGED</String>
		<String>-- RETRIEVES THE NAME OF THE VOLUME</String>
		<String>DELETE FROM VOLUMES WHERE VOLUME_ID</String>
		<String>IF (NEW.VOLUME_ID IS NULL) THEN</String>
		<String>FROM PATHS INNER JOIN VOLUMES</String>
		<String>SP_ADD_VOLUME_TO_VIRTUALPATH</String>
		<String>FOR SELECT VOLUME_NAME</String>
		<String>NO NO FK_PATHS_VOLUMES</String>
		<String>RETURN THE VOLUME NAME</String>
		<String>GEN_ID(GEN_VOLUMES_ID</String>
		<String>SQL$SP_DELETE_VOLUME</String>
		<String>VOLUMES.VOLUME_NAME</String>
		<String>ON PATHS.VOLUME_ID</String>
		<String>PRIMARY KEYVOLUMES</String>
		<String>RDB$VIEW_RELATIONS</String>
		<String>VOLUME_DESCRIPTION</String>
		<String>CONSTAINT_ON_VIEW</String>
		<String>NO NO UNQ_VOLUMES</String>
		<String>VOLUMES.VOLUME_ID</String>
		<String>NO NO PK_VOLUMES</String>
		<String>RDB$VIEW_CONTEXT</String>
		<String>VOLUMES_BI$D</String>
		<String>SQL$VOLUMES</String>
		<String>VOLUME_ID)</String>
		<String>VOLUMES'G</String>
	</GlobalStrings>
</TrID>